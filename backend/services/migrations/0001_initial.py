# Generated by Django 4.2.14 on 2024-08-15 15:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("adminpanel", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(primary_key=True, serialize=False, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                (
                    "phone_number",
                    models.CharField(db_index=True, max_length=15, unique=True),
                ),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("job", models.CharField(blank=True, max_length=50, null=True)),
                ("date_of_birth", models.DateField()),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "male"), ("female", "female")], max_length=6
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "services_user",
            },
        ),
        migrations.CreateModel(
            name="Biometrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(primary_key=True, serialize=False, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="biometrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FoodScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(primary_key=True, serialize=False, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("score", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "biometrics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="food_scores",
                        to="services.biometrics",
                    ),
                ),
                (
                    "food",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="food_scores",
                        to="adminpanel.food",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["biometrics"], name="services_fo_biometr_b1fc5e_idx"
                    ),
                    models.Index(
                        fields=["food"], name="services_fo_food_id_565db5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="BiometricsValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(primary_key=True, serialize=False, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "value",
                    models.DecimalField(decimal_places=2, max_digits=8, null=True),
                ),
                (
                    "scaled_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("expired_date", models.DateTimeField(blank=True, null=True)),
                (
                    "biochemical",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="adminpanel.biochemical",
                    ),
                ),
                (
                    "biometrics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="services.biometrics",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["biochemical"], name="services_bi_biochem_d5990b_idx"
                    ),
                    models.Index(
                        fields=["biometrics"], name="services_bi_biometr_796fef_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="biometrics",
            index=models.Index(fields=["user"], name="services_bi_user_id_67dc3c_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="services_us_email_e4b658_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="services_us_phone_n_242668_idx"
            ),
        ),
    ]
